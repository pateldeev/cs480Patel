PROJECT(Pinball)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

ADD_CUSTOM_TARGET(run
    COMMAND ${PROJECT_NAME}
    DEPENDS ${PROJECT_NAME}
    WORKING_DIRECTORY ${CMAKE_PROJECT_DIR}
)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/CMakeModules")

FIND_PACKAGE(ASSIMP REQUIRED)
FIND_PACKAGE(Bullet COMPONENTS REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(GLM REQUIRED)
FIND_PACKAGE(ImageMagick COMPONENTS Magick++ REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(SDL2 REQUIRED)

ADD_DEFINITIONS( ${BULLET_DEFINITIONS} )

ADD_DEFINITIONS(-DMAGICKCORE_QUANTUM_DEPTH=16)
ADD_DEFINITIONS(-DMAGICKCORE_HDRI_ENABLE=0)

OPTION(USE_COMPLEX_BOARD_MESH "Use complex shape for board mesh" On) # enabled by default
IF(USE_COMPLEX_BOARD_MESH)
    ADD_DEFINITIONS(-DUSE_COMPLEX_BOARD_MESH)
ENDIF(USE_COMPLEX_BOARD_MESH)

IF(CMAKE_BUILD_TYPE MATCHES Debug)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ggdb")
  ADD_DEFINITIONS(-DDEBUG)
ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)

SET(CXX11_FLAGS -std=gnu++11)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CXX11_FLAGS}")

IF(UNIX)
  ADD_DEFINITIONS(-DUNIX)
ENDIF(UNIX)

IF(NOT APPLE)
  IF(GLEW_FOUND)
      INCLUDE_DIRECTORIES(${GLEW_INCLUDE_DIRS})
      LINK_LIBRARIES(${GLEW_LIBRARIES})
  ENDIF(GLEW_FOUND)
ENDIF(NOT APPLE)

INCLUDE_DIRECTORIES(
  "${PROJECT_SOURCE_DIR}/include"
  "${PROJECT_SOURCE_DIR}/include/imgui"
  ${ASSIMP_INCLUDE_DIR}
  ${BULLET_INCLUDE_DIRS}
  ${ImageMagick_INCLUDE_DIRS}
  ${GLM_INCLUDE_DIRS}
  ${SDL2_INCLUDE_DIR}
)

# Set Includes
SET(INCLUDES ${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${INCLUDES})

# Set sources
FILE(GLOB_RECURSE SOURCES "src/*.cpp" "src/imgui/*.cpp" "src/objects/*.cpp")
ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES})

ADD_CUSTOM_TARGET("${PROJECT_NAME}_SUCCESSFUL" ALL
                  DEPENDS ${PROJECT_NAME}
                  COMMAND ${CMAKE_COMMAND} -E echo ""
                  COMMAND ${CMAKE_COMMAND} -E echo "====================="
                  COMMAND ${CMAKE_COMMAND} -E echo "  Compile complete!"
                  COMMAND ${CMAKE_COMMAND} -E echo "====================="
                  COMMAND ${CMAKE_COMMAND} -E echo "${CMAKE_CURRENT_BINARY_DIR}"
                  COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/shaders/ ${CMAKE_CURRENT_BINARY_DIR}/shaders
		  COMMAND ${CMAKE_COMMAND} -E echo "shaders folder copied!"
		  COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/objFiles/ ${CMAKE_CURRENT_BINARY_DIR}/objFiles
		  COMMAND ${CMAKE_COMMAND} -E echo "objFiles folder copied!"
		  COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/launch/ ${CMAKE_CURRENT_BINARY_DIR}/launch
		  COMMAND ${CMAKE_COMMAND} -E echo "launch folder copied!"
                 )

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${ASSIMP_LIBRARIES} ${BULLET_LIBRARIES} ${ImageMagick_LIBRARIES} ${OPENGL_LIBRARY} ${SDL2_LIBRARY})
